{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function useEmployees() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [employees, setEmployees] = useState(null);\n  const fetchAll = useCallback(async () => {\n    const data = await fetchWithCache(\"employees\", {\n      employeeId: \"\"\n    });\n    setEmployees(data);\n  }, [fetchWithCache]);\n  const invalidateData = useCallback(() => {\n    setEmployees(null);\n  }, []);\n  const setData = useCallback(data => {\n    setEmployees(data);\n  }, []);\n  return {\n    data: employees,\n    loading,\n    fetchAll,\n    invalidateData,\n    setData\n  };\n}\n\n_s(useEmployees, \"ibgvHlgWuS4e+2u9XbPSMQgUFIA=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","useEmployees","fetchWithCache","loading","employees","setEmployees","fetchAll","data","employeeId","invalidateData","setData"],"sources":["C:/Users/karth/Documents/Professional/ramp-fe-challenge/src/hooks/useEmployees.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { Employee, RequestByEmployeeParams } from \"../utils/types\"\nimport { EmployeeResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function useEmployees(): EmployeeResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [employees, setEmployees] = useState<Employee[] | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    const data = await fetchWithCache<Employee[], RequestByEmployeeParams>(\"employees\", {\n      employeeId: \"\",\n    })\n\n    setEmployees(data)\n  }, [fetchWithCache])\n\n  const invalidateData = useCallback(() => {\n    setEmployees(null)\n  }, [])\n\n  const setData = useCallback((data: Employee[] | null) => {\n    setEmployees(data)\n  }, [])\n\n  return { data: employees, loading, fetchAll, invalidateData, setData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,YAAT,GAAwC;EAAA;;EAC7C,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAoB,IAApB,CAA1C;EAEA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,YAAY;IACvC,MAAMS,IAAI,GAAG,MAAML,cAAc,CAAsC,WAAtC,EAAmD;MAClFM,UAAU,EAAE;IADsE,CAAnD,CAAjC;IAIAH,YAAY,CAACE,IAAD,CAAZ;EACD,CAN2B,EAMzB,CAACL,cAAD,CANyB,CAA5B;EAQA,MAAMO,cAAc,GAAGX,WAAW,CAAC,MAAM;IACvCO,YAAY,CAAC,IAAD,CAAZ;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,MAAMK,OAAO,GAAGZ,WAAW,CAAES,IAAD,IAA6B;IACvDF,YAAY,CAACE,IAAD,CAAZ;EACD,CAF0B,EAExB,EAFwB,CAA3B;EAIA,OAAO;IAAEA,IAAI,EAAEH,SAAR;IAAmBD,OAAnB;IAA4BG,QAA5B;IAAsCG,cAAtC;IAAsDC;EAAtD,CAAP;AACD;;GArBeT,Y;UACsBD,c"},"metadata":{},"sourceType":"module"}
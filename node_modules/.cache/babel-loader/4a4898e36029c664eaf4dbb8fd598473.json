{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Documents\\\\Professional\\\\ramp-fe-challenge\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n  const transactions = useMemo(() => {\n    var _ref, _paginatedTransaction;\n\n    return (_ref = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : transactionsByEmployee) !== null && _ref !== void 0 ? _ref : null;\n  }, [paginatedTransactions, transactionsByEmployee]);\n  const updateTransactionApproval = useCallback((transactionId, newValue) => {\n    // Update paginated transactions if they exist\n    if (paginatedTransactions) {\n      paginatedTransactionsUtils.setData({ ...paginatedTransactions,\n        data: paginatedTransactions.data.map(transaction => transaction.id === transactionId ? { ...transaction,\n          approved: newValue\n        } : transaction)\n      });\n    } // Update filtered transactions if they exist\n\n\n    if (transactionsByEmployee) {\n      transactionsByEmployeeUtils.setData(transactionsByEmployee.map(transaction => transaction.id === transactionId ? { ...transaction,\n        approved: newValue\n      } : transaction));\n    }\n  }, [paginatedTransactions, transactionsByEmployee, paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    transactionsByEmployeeUtils.invalidateData();\n    await employeeUtils.fetchAll();\n    await paginatedTransactionsUtils.fetchAll();\n    setIsLoading(false);\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    paginatedTransactionsUtils.invalidateData();\n    await transactionsByEmployeeUtils.fetchById(employeeId);\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions();\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: employeeUtils.loading // fix loading state\n        ,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          if (newValue === null) {\n            return;\n          }\n\n          if (newValue.id === \"\") {\n            await loadAllTransactions(); // fix \"All Employees\" filter\n          } else {\n            await loadTransactionsByEmployee(newValue.id);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions,\n          updateTransactionApproval: updateTransactionApproval\n          /* Pass the update function */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), transactions !== null && paginatedTransactions !== null && paginatedTransactions.nextPage !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: paginatedTransactionsUtils.loading,\n          onClick: async () => {\n            await paginatedTransactionsUtils.fetchAll();\n          },\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7Ua6EI25++OZVYLzmewbI1QjMIA=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","App","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","isLoading","setIsLoading","transactions","updateTransactionApproval","transactionId","newValue","setData","map","transaction","id","approved","loadAllTransactions","invalidateData","fetchAll","loadTransactionsByEmployee","employeeId","fetchById","loading","item","value","label","firstName","lastName","nextPage"],"sources":["C:/Users/karth/Documents/Professional/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  )\n\n  const updateTransactionApproval = useCallback((transactionId: string, newValue: boolean) => {\n    // Update paginated transactions if they exist\n    if (paginatedTransactions) {\n      paginatedTransactionsUtils.setData({\n        ...paginatedTransactions,\n        data: paginatedTransactions.data.map(transaction =>\n          transaction.id === transactionId\n            ? { ...transaction, approved: newValue }\n            : transaction\n        )\n      })\n    }\n\n    // Update filtered transactions if they exist\n    if (transactionsByEmployee) {\n      transactionsByEmployeeUtils.setData(\n        transactionsByEmployee.map(transaction =>\n          transaction.id === transactionId\n            ? { ...transaction, approved: newValue }\n            : transaction\n        )\n      )\n    }\n  }, [paginatedTransactions, transactionsByEmployee, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true)\n    transactionsByEmployeeUtils.invalidateData()\n\n    await employeeUtils.fetchAll()\n    await paginatedTransactionsUtils.fetchAll()\n\n    setIsLoading(false)\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData()\n      await transactionsByEmployeeUtils.fetchById(employeeId)\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions()\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={employeeUtils.loading} // fix loading state\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return\n            }\n\n            if (newValue.id === \"\") {\n              await loadAllTransactions() // fix \"All Employees\" filter\n            } else {\n              await loadTransactionsByEmployee(newValue.id)\n            }\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions \n            transactions={transactions} \n            updateTransactionApproval={updateTransactionApproval} /* Pass the update function */\n          />\n\n          {transactions !== null && paginatedTransactions !== null && paginatedTransactions.nextPage !== null && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading}\n              onClick={async () => {\n                await paginatedTransactionsUtils.fetchAll()\n              }}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}